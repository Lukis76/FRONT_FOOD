{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  recipes: [],\n  recipesAll: [],\n  types: [],\n  details: [],\n  paguination: 1\n};\nexport const taskSlice = createSlice({\n  name: 'tasks',\n  initialState,\n  reducers: {\n    setPaguination: (state, action) => {\n      state.paguination = action.payload;\n    },\n\n    /*------------------------------------------------------------ */\n\n    /*------------------------------------------------------------ */\n    setGetRecipes: (state, action) => {\n      state.recipes = action.payload;\n      state.recipesAll = action.payload;\n    },\n\n    /*------------------------------------------------------------ */\n\n    /*------------------------------------------------------------ */\n    setGetTypes: (state, action) => {\n      state.types = action.payload;\n    },\n\n    /*------------------------------------------------------------ */\n\n    /*------------------------------------------------------------ */\n    setClearDetail: (state, action) => {\n      state.details = [];\n    },\n\n    /*------------------------------------------------------------ */\n\n    /*------------------------------------------------------------ */\n    setGetRecipeID: (state, action) => {\n      state.details = action.payload;\n    },\n\n    /*------------------------------------------------------------ */\n\n    /*-------------------------------------------------------------*/\n    setFilterSearch: (state, action) => {\n      if (action.payload === '') {\n        state.recipes = state.recipesAll;\n      } else {\n        const result = state.recipesAll.filter(el => el.name.toLowerCase().includes(action.payload.toLowerCase()));\n        state.recipes = result;\n      }\n    },\n\n    /*------------------------------------------------------------ */\n\n    /*------------------------------------------------------------ */\n    setFilter: (state, action) => {\n      let result = state.recipesAll;\n      /*///////////////////// Order A-z Z-a /////////////////////////*/\n\n      if (action.payload.order === 'az') {\n        result.sort((a, b) => {\n          if (a.name.toLowerCase() > b.name.toLowerCase()) return 1;else return -1;\n        });\n      } else if (action.payload.order === 'za') {\n        result.sort((a, b) => {\n          if (a.name.toLowerCase() < b.name.toLowerCase()) return 1;else return -1;\n        });\n      }\n      /*////////////////////// Health Score /////////////////////////*/\n\n\n      if (action.payload.score === 'lower') {\n        result.sort((a, b) => {\n          return a.healthScore - b.healthScore;\n        });\n      } else if (action.payload.score === 'higher') {\n        result.sort((a, b) => {\n          return b.healthScore - a.healthScore;\n        });\n      }\n      /*//////////////////////// db vs api //////////////////////////*/\n\n\n      if (action.payload.database === 'db') {\n        result = result.filter(el => el.createdb);\n      } else if (action.payload.database === 'api') {\n        result = result.filter(el => !el.createdb);\n      }\n      /*////////////////////////// Diets /////////////////////////////*/\n\n\n      if (action.payload.diet !== 'all') {\n        // eslint-disable-next-line\n        result = result.filter(el => {\n          if (el.diets.length > 0) {\n            if (el.diets.find(el => el === action.payload.diet)) {\n              return el;\n            }\n          }\n        });\n      }\n\n      state.recipes = result;\n    }\n    /*------------------------------------------------------------ */\n\n    /*------------------------------------------------------------ */\n\n  }\n});\nexport const {\n  setGetRecipes,\n  setFilterSearch,\n  setClearDetail,\n  setGetRecipeID,\n  setGetTypes,\n  setPaguination,\n  setFilter\n} = taskSlice.actions;\nexport default taskSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","recipes","recipesAll","types","details","paguination","taskSlice","name","reducers","setPaguination","state","action","payload","setGetRecipes","setGetTypes","setClearDetail","setGetRecipeID","setFilterSearch","result","filter","el","toLowerCase","includes","setFilter","order","sort","a","b","score","healthScore","database","createdb","diet","diets","length","find","actions","reducer"],"sources":["/home/lucas/Documentos/FOOD/FRONT_FOOD/src/app/recucer/taskSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n  recipes: [],\n  recipesAll: [],\n  types: [],\n  details: [],\n  paguination: 1,\n}\n\nexport const taskSlice = createSlice({\n  name: 'tasks',\n  initialState,\n  reducers: {\n    setPaguination: (state, action) => {\n      state.paguination = action.payload\n    },\n    /*------------------------------------------------------------ */\n    /*------------------------------------------------------------ */\n    setGetRecipes: (state, action) => {\n      state.recipes = action.payload\n      state.recipesAll = action.payload\n    },\n    /*------------------------------------------------------------ */\n    /*------------------------------------------------------------ */\n    setGetTypes: (state, action) => {\n      state.types = action.payload\n    },\n    /*------------------------------------------------------------ */\n    /*------------------------------------------------------------ */\n    setClearDetail: (state, action) => {\n      state.details = []\n    },\n    /*------------------------------------------------------------ */\n    /*------------------------------------------------------------ */\n    setGetRecipeID: (state, action) => {\n      state.details = action.payload\n    },\n    /*------------------------------------------------------------ */\n    /*-------------------------------------------------------------*/\n    setFilterSearch: (state, action) => {\n      if (action.payload === '') {\n        state.recipes = state.recipesAll\n      } else {\n        const result = state.recipesAll.filter((el) =>\n          el.name.toLowerCase().includes(action.payload.toLowerCase())\n        )\n        state.recipes = result\n      }\n    },\n    /*------------------------------------------------------------ */\n    /*------------------------------------------------------------ */\n    setFilter: (state, action) => {\n      let result = state.recipesAll\n      /*///////////////////// Order A-z Z-a /////////////////////////*/\n      if (action.payload.order === 'az') {\n        result.sort((a, b) => {\n          if (a.name.toLowerCase() > b.name.toLowerCase()) return 1\n          else return -1\n        })\n      } else if (action.payload.order === 'za') {\n        result.sort((a, b) => {\n          if (a.name.toLowerCase() < b.name.toLowerCase()) return 1\n          else return -1\n        })\n      }\n      /*////////////////////// Health Score /////////////////////////*/\n      if (action.payload.score === 'lower') {\n        result.sort((a, b) => {\n          return a.healthScore - b.healthScore\n        })\n      } else if (action.payload.score === 'higher') {\n        result.sort((a, b) => {\n          return b.healthScore - a.healthScore\n        })\n      }\n      /*//////////////////////// db vs api //////////////////////////*/\n      if (action.payload.database === 'db') {\n        result = result.filter((el) => el.createdb)\n      } else if (action.payload.database === 'api') {\n        result = result.filter((el) => !el.createdb)\n      }\n      /*////////////////////////// Diets /////////////////////////////*/\n      if (action.payload.diet !== 'all') {\n        // eslint-disable-next-line\n        result = result.filter((el) => {\n          if (el.diets.length > 0) {\n            if (el.diets.find((el) => el === action.payload.diet)) {\n              return el\n            }\n          }\n        })\n      }\n      state.recipes = result\n    },\n    /*------------------------------------------------------------ */\n    /*------------------------------------------------------------ */\n  },\n})\n\nexport const {\n  setGetRecipes,\n  setFilterSearch,\n  setClearDetail,\n  setGetRecipeID,\n  setGetTypes,\n  setPaguination,\n  setFilter,\n} = taskSlice.actions\n\nexport default taskSlice.reducer\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}